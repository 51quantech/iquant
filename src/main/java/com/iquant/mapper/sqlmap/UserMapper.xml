<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.iquant.mapper.UserMapper">

	<resultMap id="UserResult" type="User">
		<result column="id" property="id" />
		<result column="uname" property="uname" />
		<result column="upwd" property="upwd" />
		<result column="created" property="created" />
		<result column="modified" property="modified" />
		<result column="status" property="status" />
		<result column="memo" property="memo" />
	</resultMap>


	<sql id="selectAll">
		id,uname,upwd,created,modified,status,memo
	</sql>

	<sql id="condition">
		<trim prefix="where" prefixOverrides="and">
			<if test="uname != null">
				and uname = #{uname}
			</if>
			<if test="upwd != null">
				and upwd = #{upwd}
			</if> 
			<if test="status != null and status > 0">
				and user.status = #{status}
			</if>
		</trim>
	</sql>

	<select id="queryUserTotalRows" resultType="int" parameterType="UserQuery">
		select count(1) from user
		<include refid="condition" />
	</select>

	<select id="queryUserList" resultMap="UserResult" parameterType="UserQuery">
		select
		<include refid="selectAll" />
		from user
		<include refid="condition" />
		order by created desc
	</select>
	
	<select id="queryUserByUname" resultMap="UserResult" parameterType="string">
		select
		<include refid="selectAll" />
		from user
	</select>
	
	<select id="queryUserById" resultMap="UserResult" parameterType="int">
		select
		<include refid="selectAll" />
		from user where user.id=#{id}
	</select>

	<insert id="insertUser" parameterType="User">
		insert into user
		(name,password,created,modified,status,role_id,memo)
		values
		(#{uname},#{upwd},now(),now(),#{status},#{roleId},#{memo})
		<selectKey resultType="int" keyProperty="id">
			SELECT @@IDENTITY AS id
		</selectKey>
	</insert>

	<delete id="deleteUserByUname" parameterType="string">
    	delete from user where uname=#{uname}
	</delete>
	
	<delete id="deleteUserById" parameterType="int">
    	delete from user where id=#{id}
	</delete>

	<update id="updateUserByUname" parameterType="User">
		update user
		set 
		upwd=#{upwd},modified=now(),status=#{status},role_id=#{roleId},memo=#{memo}
		where uname=#{uname}
	</update>
	
	<update id="updateUserById" parameterType="User">
		update user
		set 
		upwd=#{upwd},modified=now(),status=#{status},role_id=#{roleId},memo=#{memo}
		where id=#{id}
	</update>
	
</mapper>